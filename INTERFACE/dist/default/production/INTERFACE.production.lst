

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Aug 18 17:04:20 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  001694                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _LAT_array
    65  001694  89                 	db	137
    66  001695  0F                 	db	15
    67  001696  8A                 	db	138
    68  001697  0F                 	db	15
    69  001698  8B                 	db	139
    70  001699  0F                 	db	15
    71  00169A  8C                 	db	140
    72  00169B  0F                 	db	15
    73  00169C  8D                 	db	141
    74  00169D  0F                 	db	15
    75                           
    76                           ;initializer for _PORT_array
    77  00169E  80                 	db	128
    78  00169F  0F                 	db	15
    79  0016A0  81                 	db	129
    80  0016A1  0F                 	db	15
    81  0016A2  82                 	db	130
    82  0016A3  0F                 	db	15
    83  0016A4  83                 	db	131
    84  0016A5  0F                 	db	15
    85  0016A6  84                 	db	132
    86  0016A7  0F                 	db	15
    87                           
    88                           ;initializer for _TRIS_array
    89  0016A8  92                 	db	146
    90  0016A9  0F                 	db	15
    91  0016AA  93                 	db	147
    92  0016AB  0F                 	db	15
    93  0016AC  94                 	db	148
    94  0016AD  0F                 	db	15
    95  0016AE  95                 	db	149
    96  0016AF  0F                 	db	15
    97  0016B0  96                 	db	150
    98  0016B1  0F                 	db	15
    99                           
   100                           ;initializer for _customChar
   101  0016B2  1F                 	db	31
   102  0016B3  01                 	db	1
   103  0016B4  02                 	db	2
   104  0016B5  04                 	db	4
   105  0016B6  08                 	db	8
   106  0016B7  04                 	db	4
   107  0016B8  02                 	db	2
   108  0016B9  1F                 	db	31
   109                           
   110                           ;initializer for _ret
   111  0016BA  01                 	db	1
   112                           
   113                           ;initializer for _lcd_1
   114  0016BB  02                 	db	2
   115  0016BC  0A                 	db	10
   116  0016BD  12                 	db	18
   117  0016BE  1A                 	db	26
   118  0016BF  22                 	db	34
   119  0016C0  2A                 	db	42
   120  0016C1  32                 	db	50
   121  0016C2  3A                 	db	58
   122  0016C3  03                 	db	3
   123  0016C4  0B                 	db	11
   124                           
   125                           	psect	smallconst
   126  001000                     __psmallconst:
   127                           	callstack 0
   128  001000  00                 	db	0
   129  001001  37                 	db	55
   130  001002  38                 	db	56
   131  001003  39                 	db	57
   132  001004  2F                 	db	47
   133  001005  34                 	db	52
   134  001006  35                 	db	53
   135  001007  36                 	db	54
   136  001008  2A                 	db	42
   137  001009  31                 	db	49
   138  00100A  32                 	db	50
   139  00100B  33                 	db	51
   140  00100C  2D                 	db	45
   141  00100D  25                 	db	37
   142  00100E  30                 	db	48
   143  00100F  3D                 	db	61
   144  001010  2B                 	db	43
   145  001011                     __end_of_buttons_array:
   146                           	callstack 0
   147  0000                     _LATA	set	3977
   148  0000                     _PORTE	set	3972
   149  0000                     _PORTD	set	3971
   150  0000                     _PORTC	set	3970
   151  0000                     _PORTB	set	3969
   152  0000                     _PORTA	set	3968
   153  0000                     _TRISA	set	3986
   154  0000                     _TRISE	set	3990
   155  0000                     _TRISD	set	3989
   156  0000                     _TRISC	set	3988
   157  0000                     _TRISB	set	3987
   158  0000                     _LATE	set	3981
   159  0000                     _LATD	set	3980
   160  0000                     _LATC	set	3979
   161  0000                     _LATB	set	3978
   162  001011                     STR_1:
   163  001011  4D                 	db	77	;'M'
   164  001012  4F                 	db	79	;'O'
   165  001013  48                 	db	72	;'H'
   166  001014  41                 	db	65	;'A'
   167  001015  4D                 	db	77	;'M'
   168  001016  45                 	db	69	;'E'
   169  001017  44                 	db	68	;'D'
   170  001018  00                 	db	0
   171  001019                     STR_2:
   172  001019  25                 	db	37
   173  00101A  69                 	db	105	;'i'
   174  00101B  00                 	db	0
   175  00101C  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  00162A                     __pcinit:
   181                           	callstack 0
   182  00162A                     start_initialization:
   183                           	callstack 0
   184  00162A                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Initialize objects allocated to COMRAM (49 bytes)
   188                           ; load TBLPTR registers with __pidataCOMRAM
   189  00162A  0E94               	movlw	low __pidataCOMRAM
   190  00162C  6EF6               	movwf	tblptrl,c
   191  00162E  0E16               	movlw	high __pidataCOMRAM
   192  001630  6EF7               	movwf	tblptrh,c
   193  001632  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   194  001634  6EF8               	movwf	tblptru,c
   195  001636  EE00  F001         	lfsr	0,__pdataCOMRAM
   196  00163A  EE10 F031          	lfsr	1,49
   197  00163E                     copy_data0:
   198  00163E  0009               	tblrd		*+
   199  001640  CFF5 FFEE          	movff	tablat,postinc0
   200  001644  50E5               	movf	postdec1,w,c
   201  001646  50E1               	movf	fsr1l,w,c
   202  001648  E1FA               	bnz	copy_data0
   203                           
   204                           ; Clear objects allocated to COMRAM (13 bytes)
   205  00164A  EE00  F055         	lfsr	0,__pbssCOMRAM
   206  00164E  0E0D               	movlw	13
   207  001650                     clear_0:
   208  001650  6AEE               	clrf	postinc0,c
   209  001652  06E8               	decf	wreg,f,c
   210  001654  E1FD               	bnz	clear_0
   211  001656                     end_of_initialization:
   212                           	callstack 0
   213  001656                     __end_of__initialization:
   214                           	callstack 0
   215  001656  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  001658  6EF8               	movwf	tblptru,c
   217  00165A  0100               	movlb	0
   218  00165C  EF30  F00B         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221  000055                     __pbssCOMRAM:
   222                           	callstack 0
   223  000055                     	ds	6
   224  00005B                     relay_off@F3015:
   225                           	callstack 0
   226  00005B                     	ds	1
   227  00005C                     relay_on@F3010:
   228                           	callstack 0
   229  00005C                     	ds	1
   230  00005D                     relay_init@F3005:
   231                           	callstack 0
   232  00005D                     	ds	1
   233  00005E                     led_toggle@F3026:
   234                           	callstack 0
   235  00005E                     	ds	1
   236  00005F                     led_turn_off@F3021:
   237                           	callstack 0
   238  00005F                     	ds	1
   239  000060                     led_turn_on@F3016:
   240                           	callstack 0
   241  000060                     	ds	1
   242  000061                     led_init@F3011:
   243                           	callstack 0
   244  000061                     	ds	1
   245                           
   246                           	psect	dataCOMRAM
   247  000001                     __pdataCOMRAM:
   248                           	callstack 0
   249  000001                     _LAT_array:
   250                           	callstack 0
   251  000001                     	ds	10
   252  00000B                     _PORT_array:
   253                           	callstack 0
   254  00000B                     	ds	10
   255  000015                     _TRIS_array:
   256                           	callstack 0
   257  000015                     	ds	10
   258  00001F                     _customChar:
   259                           	callstack 0
   260  00001F                     	ds	8
   261  000027                     _ret:
   262                           	callstack 0
   263  000027                     	ds	1
   264  000028                     _lcd_1:
   265                           	callstack 0
   266  000028                     	ds	10
   267                           
   268                           	psect	cstackCOMRAM
   269  000032                     __pcstackCOMRAM:
   270                           	callstack 0
   271  000032                     pin_directoin_intialize@pin:
   272                           	callstack 0
   273  000032                     pin_write_value@pin:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x0
   277  000032                     	ds	2
   278  000034                     ??_pin_directoin_intialize:
   279  000034                     pin_write_value@value:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x2
   283  000034                     	ds	1
   284  000035                     ??_pin_write_value:
   285                           
   286                           ; 1 bytes @ 0x3
   287  000035                     	ds	5
   288  00003A                     pin_directoin_intialize@ret:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x8
   292  00003A                     	ds	1
   293  00003B                     pin_write_value@ret:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x9
   297  00003B                     	ds	1
   298  00003C                     lcd_send_enable_8bit@lcd:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xA
   302  00003C                     	ds	2
   303  00003E                     lcd_send_enable_8bit@ret:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0xC
   307  00003E                     	ds	1
   308  00003F                     send_command_8@lcd:
   309                           	callstack 0
   310  00003F                     display_char_8@lcd:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xD
   314  00003F                     	ds	2
   315  000041                     send_command_8@command:
   316                           	callstack 0
   317  000041                     display_char_8@data:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xF
   321  000041                     	ds	1
   322  000042                     ??_send_command_8:
   323  000042                     ??_display_char_8:
   324                           
   325                           ; 1 bytes @ 0x10
   326  000042                     	ds	4
   327  000046                     send_command_8@ret:
   328                           	callstack 0
   329  000046                     display_char_8@ret:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x14
   333  000046                     	ds	1
   334  000047                     send_command_8@counter:
   335                           	callstack 0
   336  000047                     display_char_8@counter:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x15
   340  000047                     	ds	1
   341  000048                     lcd_8_bit_init@lcd:
   342                           	callstack 0
   343  000048                     lcd_8_bit_set_cursor@lcd:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x16
   347  000048                     	ds	2
   348  00004A                     ??_lcd_8_bit_init:
   349  00004A                     lcd_8_bit_set_cursor@row:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x18
   353  00004A                     	ds	1
   354  00004B                     lcd_8_bit_set_cursor@column:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x19
   358  00004B                     	ds	1
   359  00004C                     ??_lcd_8_bit_set_cursor:
   360  00004C                     lcd_8_bit_init@counter:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x1A
   364  00004C                     	ds	1
   365  00004D                     lcd_8_bit_init@ret:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x1B
   369  00004D                     	ds	1
   370  00004E                     display_string_at_position_8@lcd:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x1C
   374  00004E                     	ds	2
   375  000050                     display_string_at_position_8@row:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x1E
   379  000050                     	ds	1
   380  000051                     display_string_at_position_8@coloumn:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1F
   384  000051                     	ds	1
   385  000052                     display_string_at_position_8@data:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x20
   389  000052                     	ds	2
   390  000054                     display_string_at_position_8@ret:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x22
   394  000054                     	ds	1
   395  000055                     
   396                           ; 1 bytes @ 0x23
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 36 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  2  252[None  ] int 
   409 ;; Registers used:
   410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels required when called: 5
   422 ;; This function calls:
   423 ;;		_display_string_at_position_8
   424 ;;		_lcd_8_bit_init
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text0
   431  001660                     __ptext0:
   432                           	callstack 0
   433  001660                     _main:
   434                           	callstack 26
   435  001660                     
   436                           ;main.c: 38:     ret=lcd_8_bit_init(&lcd_1);
   437  001660  0E28               	movlw	low _lcd_1
   438  001662  6E48               	movwf	lcd_8_bit_init@lcd^0,c
   439  001664  0E00               	movlw	high _lcd_1
   440  001666  6E49               	movwf	(lcd_8_bit_init@lcd+1)^0,c
   441  001668  EC47  F009         	call	_lcd_8_bit_init	;wreg free
   442  00166C  6E27               	movwf	_ret^0,c
   443  00166E                     
   444                           ;main.c: 39:     ret=display_string_at_position_8(&lcd_1,1,3,"MOHAMED");
   445  00166E  0E28               	movlw	low _lcd_1
   446  001670  6E4E               	movwf	display_string_at_position_8@lcd^0,c
   447  001672  0E00               	movlw	high _lcd_1
   448  001674  6E4F               	movwf	(display_string_at_position_8@lcd+1)^0,c
   449  001676  0E01               	movlw	1
   450  001678  6E50               	movwf	display_string_at_position_8@row^0,c
   451  00167A  0E03               	movlw	3
   452  00167C  6E51               	movwf	display_string_at_position_8@coloumn^0,c
   453  00167E  0E11               	movlw	low STR_1
   454  001680  6E52               	movwf	display_string_at_position_8@data^0,c
   455  001682  0E10               	movlw	high STR_1
   456  001684  6E53               	movwf	(display_string_at_position_8@data+1)^0,c
   457  001686  ECB3  F00A         	call	_display_string_at_position_8	;wreg free
   458  00168A  6E27               	movwf	_ret^0,c
   459  00168C                     l253:
   460  00168C  EF46  F00B         	goto	l253
   461  001690  EF00  F000         	goto	start
   462  001694                     __end_of_main:
   463                           	callstack 0
   464                           
   465 ;; *************** function _lcd_8_bit_init *****************
   466 ;; Defined at:
   467 ;;		line 212 in file "ECU/LCD/lcd.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;  lcd             2   22[COMRAM] PTR const struct .
   470 ;;		 -> lcd_1(10), 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  ret             1   27[COMRAM] unsigned char 
   473 ;;  counter         1   26[COMRAM] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      unsigned char 
   476 ;; Registers used:
   477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;Total ram usage:        6 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 3
   490 ;; This function calls:
   491 ;;		_pin_directoin_intialize
   492 ;;		_send_command_8
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text1
   499  00128E                     __ptext1:
   500                           	callstack 0
   501  00128E                     _lcd_8_bit_init:
   502                           	callstack 27
   503  00128E                     
   504                           ;ECU/LCD/lcd.c: 215:     uint8 counter=0;
   505  00128E  0E00               	movlw	0
   506  001290  6E4C               	movwf	lcd_8_bit_init@counter^0,c
   507  001292                     
   508                           ;ECU/LCD/lcd.c: 216:     if(((void*)0)==lcd)
   509  001292  5048               	movf	lcd_8_bit_init@lcd^0,w,c
   510  001294  1049               	iorwf	(lcd_8_bit_init@lcd+1)^0,w,c
   511  001296  A4D8               	btfss	status,2,c
   512  001298  EF50  F009         	goto	u1141
   513  00129C  EF52  F009         	goto	u1140
   514  0012A0                     u1141:
   515  0012A0  EF56  F009         	goto	l2174
   516  0012A4                     u1140:
   517  0012A4                     
   518                           ;ECU/LCD/lcd.c: 217:     {;ECU/LCD/lcd.c: 218:         ret=(Std_ReturnType)0x00;
   519  0012A4  0E00               	movlw	0
   520  0012A6  6E4D               	movwf	lcd_8_bit_init@ret^0,c
   521                           
   522                           ;ECU/LCD/lcd.c: 219:     }
   523  0012A8  EFC9  F009         	goto	l2206
   524  0012AC                     l2174:
   525                           
   526                           ;ECU/LCD/lcd.c: 221:     {;ECU/LCD/lcd.c: 222:         ret=pin_directoin_intialize(&(lcd
      +                          ->en));
   527  0012AC  0E01               	movlw	1
   528  0012AE  2448               	addwf	lcd_8_bit_init@lcd^0,w,c
   529  0012B0  6E32               	movwf	pin_directoin_intialize@pin^0,c
   530  0012B2  0E00               	movlw	0
   531  0012B4  2049               	addwfc	(lcd_8_bit_init@lcd+1)^0,w,c
   532  0012B6  6E33               	movwf	(pin_directoin_intialize@pin+1)^0,c
   533  0012B8  EC0F  F008         	call	_pin_directoin_intialize	;wreg free
   534  0012BC  6E4D               	movwf	lcd_8_bit_init@ret^0,c
   535                           
   536                           ;ECU/LCD/lcd.c: 223:         ret=pin_directoin_intialize(&(lcd->rs));
   537  0012BE  C048  F032         	movff	lcd_8_bit_init@lcd,pin_directoin_intialize@pin
   538  0012C2  C049  F033         	movff	lcd_8_bit_init@lcd+1,pin_directoin_intialize@pin+1
   539  0012C6  EC0F  F008         	call	_pin_directoin_intialize	;wreg free
   540  0012CA  6E4D               	movwf	lcd_8_bit_init@ret^0,c
   541  0012CC                     
   542                           ;ECU/LCD/lcd.c: 224:        for(counter=0;counter<8;counter++)
   543  0012CC  0E00               	movlw	0
   544  0012CE  6E4C               	movwf	lcd_8_bit_init@counter^0,c
   545  0012D0                     l2182:
   546  0012D0  504C               	movf	lcd_8_bit_init@counter^0,w,c
   547  0012D2  2448               	addwf	lcd_8_bit_init@lcd^0,w,c
   548  0012D4  6E4A               	movwf	??_lcd_8_bit_init^0,c
   549  0012D6  0E00               	movlw	0
   550  0012D8  2049               	addwfc	(lcd_8_bit_init@lcd+1)^0,w,c
   551  0012DA  6E4B               	movwf	(??_lcd_8_bit_init+1)^0,c
   552  0012DC  0E02               	movlw	2
   553  0012DE  244A               	addwf	??_lcd_8_bit_init^0,w,c
   554  0012E0  6E32               	movwf	pin_directoin_intialize@pin^0,c
   555  0012E2  0E00               	movlw	0
   556  0012E4  204B               	addwfc	(??_lcd_8_bit_init+1)^0,w,c
   557  0012E6  6E33               	movwf	(pin_directoin_intialize@pin+1)^0,c
   558  0012E8  EC0F  F008         	call	_pin_directoin_intialize	;wreg free
   559  0012EC                     
   560                           ;ECU/LCD/lcd.c: 227:        }
   561  0012EC  2A4C               	incf	lcd_8_bit_init@counter^0,f,c
   562  0012EE  0E07               	movlw	7
   563  0012F0  644C               	cpfsgt	lcd_8_bit_init@counter^0,c
   564  0012F2  EF7D  F009         	goto	u1151
   565  0012F6  EF7F  F009         	goto	u1150
   566  0012FA                     u1151:
   567  0012FA  EF68  F009         	goto	l2182
   568  0012FE                     u1150:
   569  0012FE                     
   570                           ;ECU/LCD/lcd.c: 228:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
   571  0012FE  0E34               	movlw	52
   572  001300  6E4A               	movwf	??_lcd_8_bit_init^0,c
   573  001302  0EF2               	movlw	242
   574  001304                     u1627:
   575  001304  2EE8               	decfsz	wreg,f,c
   576  001306  D7FE               	bra	u1627
   577  001308  2E4A               	decfsz	??_lcd_8_bit_init^0,f,c
   578  00130A  D7FC               	bra	u1627
   579  00130C  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   580  001310  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   581  001314  0E38               	movlw	56
   582  001316  6E41               	movwf	send_command_8@command^0,c
   583  001318  EC23  F00A         	call	_send_command_8	;wreg free
   584  00131C                     
   585                           ;ECU/LCD/lcd.c: 230:        _delay((unsigned long)((5)*(8000000UL/4000.0)));
   586  00131C  0E0D               	movlw	13
   587  00131E  6E4A               	movwf	??_lcd_8_bit_init^0,c
   588  001320  0EFC               	movlw	252
   589  001322                     u1637:
   590  001322  2EE8               	decfsz	wreg,f,c
   591  001324  D7FE               	bra	u1637
   592  001326  2E4A               	decfsz	??_lcd_8_bit_init^0,f,c
   593  001328  D7FC               	bra	u1637
   594  00132A  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   595  00132E  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   596  001332  0E38               	movlw	56
   597  001334  6E41               	movwf	send_command_8@command^0,c
   598  001336  EC23  F00A         	call	_send_command_8	;wreg free
   599  00133A                     
   600                           ;ECU/LCD/lcd.c: 232:         _delay((unsigned long)((150)*(8000000UL/4000000.0)));
   601  00133A  0E64               	movlw	100
   602  00133C                     u1647:
   603  00133C  2EE8               	decfsz	wreg,f,c
   604  00133E  D7FE               	bra	u1647
   605  001340  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   606  001344  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   607  001348  0E38               	movlw	56
   608  00134A  6E41               	movwf	send_command_8@command^0,c
   609  00134C  EC23  F00A         	call	_send_command_8	;wreg free
   610  001350  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   611  001354  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   612  001358  0E01               	movlw	1
   613  00135A  6E41               	movwf	send_command_8@command^0,c
   614  00135C  EC23  F00A         	call	_send_command_8	;wreg free
   615  001360  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   616  001364  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   617  001368  0E02               	movlw	2
   618  00136A  6E41               	movwf	send_command_8@command^0,c
   619  00136C  EC23  F00A         	call	_send_command_8	;wreg free
   620  001370  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   621  001374  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   622  001378  0E0F               	movlw	15
   623  00137A  6E41               	movwf	send_command_8@command^0,c
   624  00137C  EC23  F00A         	call	_send_command_8	;wreg free
   625  001380                     
   626                           ;ECU/LCD/lcd.c: 238:         ret = send_command_8(lcd, 0x80);
   627  001380  C048  F03F         	movff	lcd_8_bit_init@lcd,send_command_8@lcd
   628  001384  C049  F040         	movff	lcd_8_bit_init@lcd+1,send_command_8@lcd+1
   629  001388  0E80               	movlw	128
   630  00138A  6E41               	movwf	send_command_8@command^0,c
   631  00138C  EC23  F00A         	call	_send_command_8	;wreg free
   632  001390  6E4D               	movwf	lcd_8_bit_init@ret^0,c
   633  001392                     l2206:
   634                           
   635                           ;ECU/LCD/lcd.c: 240:     return ret;
   636  001392  504D               	movf	lcd_8_bit_init@ret^0,w,c
   637  001394  0012               	return		;funcret
   638  001396                     __end_of_lcd_8_bit_init:
   639                           	callstack 0
   640                           
   641 ;; *************** function _pin_directoin_intialize *****************
   642 ;; Defined at:
   643 ;;		line 15 in file "MCAL/GPIO/gpio.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  pin             2    0[COMRAM] PTR const struct .
   646 ;;		 -> lcd_1._8_bit(8), lcd_1(10), relay_init@relay_status(1), led_init@led_x(1), 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  ret             1    8[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      unsigned char 
   651 ;; Registers used:
   652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;Total ram usage:        9 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_lcd_8_bit_init
   668 ;;		_segment_init
   669 ;;		_motor_init
   670 ;;		_keypad_init
   671 ;;		_led_init
   672 ;;		_relay_init
   673 ;;		_lcd_4_bit_init
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text2
   678  00101E                     __ptext2:
   679                           	callstack 0
   680  00101E                     _pin_directoin_intialize:
   681                           	callstack 29
   682  00101E                     
   683                           ;MCAL/GPIO/gpio.c: 15: Std_ReturnType pin_directoin_intialize(const pin_config *pin);MCA
      +                          L/GPIO/gpio.c: 16: {;MCAL/GPIO/gpio.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x01
      +                          ;
   684  00101E  0E01               	movlw	1
   685  001020  6E3A               	movwf	pin_directoin_intialize@ret^0,c
   686  001022                     
   687                           ;MCAL/GPIO/gpio.c: 18:     if(((void*)0) == pin || pin->pin > 8 -1){
   688  001022  5032               	movf	pin_directoin_intialize@pin^0,w,c
   689  001024  1033               	iorwf	(pin_directoin_intialize@pin+1)^0,w,c
   690  001026  B4D8               	btfsc	status,2,c
   691  001028  EF18  F008         	goto	u1001
   692  00102C  EF1A  F008         	goto	u1000
   693  001030                     u1001:
   694  001030  EF2B  F008         	goto	l2062
   695  001034                     u1000:
   696  001034  C032  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
   697  001038  C033  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
   698  00103C  30DF               	rrcf	223,w,c
   699  00103E  32E8               	rrcf	wreg,f,c
   700  001040  32E8               	rrcf	wreg,f,c
   701  001042  0B07               	andlw	7
   702  001044  6E34               	movwf	??_pin_directoin_intialize^0,c
   703  001046  0E07               	movlw	7
   704  001048  6434               	cpfsgt	??_pin_directoin_intialize^0,c
   705  00104A  EF29  F008         	goto	u1011
   706  00104E  EF2B  F008         	goto	u1010
   707  001052                     u1011:
   708  001052  EF8E  F008         	goto	l2070
   709  001056                     u1010:
   710  001056                     l2062:
   711                           
   712                           ;MCAL/GPIO/gpio.c: 19:         ret = (Std_ReturnType)0x00;
   713  001056  0E00               	movlw	0
   714  001058  6E3A               	movwf	pin_directoin_intialize@ret^0,c
   715                           
   716                           ;MCAL/GPIO/gpio.c: 20:     }
   717  00105A  EFAF  F008         	goto	l2072
   718  00105E                     l2064:
   719  00105E  C032  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
   720  001062  C033  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
   721  001066  30DF               	rrcf	223,w,c
   722  001068  32E8               	rrcf	wreg,f,c
   723  00106A  32E8               	rrcf	wreg,f,c
   724  00106C  0B07               	andlw	7
   725  00106E  6E34               	movwf	??_pin_directoin_intialize^0,c
   726  001070  0E01               	movlw	1
   727  001072  6E35               	movwf	(??_pin_directoin_intialize+1)^0,c
   728  001074  2A34               	incf	??_pin_directoin_intialize^0,f,c
   729  001076  EF3F  F008         	goto	u1024
   730  00107A                     u1025:
   731  00107A  90D8               	bcf	status,0,c
   732  00107C  3635               	rlcf	(??_pin_directoin_intialize+1)^0,f,c
   733  00107E                     u1024:
   734  00107E  2E34               	decfsz	??_pin_directoin_intialize^0,f,c
   735  001080  EF3D  F008         	goto	u1025
   736  001084  C032  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
   737  001088  C033  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
   738  00108C  50DF               	movf	223,w,c
   739  00108E  0B07               	andlw	7
   740  001090  6E36               	movwf	(??_pin_directoin_intialize+2)^0,c
   741  001092  5036               	movf	(??_pin_directoin_intialize+2)^0,w,c
   742  001094  0D02               	mullw	2
   743  001096  0E15               	movlw	low _TRIS_array
   744  001098  24F3               	addwf	243,w,c
   745  00109A  6ED9               	movwf	fsr2l,c
   746  00109C  0E00               	movlw	high _TRIS_array
   747  00109E  20F4               	addwfc	prodh,w,c
   748  0010A0  6EDA               	movwf	fsr2h,c
   749  0010A2  CFDE F037          	movff	postinc2,??_pin_directoin_intialize+3
   750  0010A6  CFDD F038          	movff	postdec2,??_pin_directoin_intialize+4
   751  0010AA  C037  FFD9         	movff	??_pin_directoin_intialize+3,fsr2l
   752  0010AE  C038  FFDA         	movff	??_pin_directoin_intialize+4,fsr2h
   753  0010B2  5035               	movf	(??_pin_directoin_intialize+1)^0,w,c
   754  0010B4  12DF               	iorwf	indf2,f,c
   755  0010B6  EFAF  F008         	goto	l2072
   756  0010BA                     l2066:
   757  0010BA  C032  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
   758  0010BE  C033  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
   759  0010C2  30DF               	rrcf	223,w,c
   760  0010C4  32E8               	rrcf	wreg,f,c
   761  0010C6  32E8               	rrcf	wreg,f,c
   762  0010C8  0B07               	andlw	7
   763  0010CA  6E34               	movwf	??_pin_directoin_intialize^0,c
   764  0010CC  0E01               	movlw	1
   765  0010CE  6E35               	movwf	(??_pin_directoin_intialize+1)^0,c
   766  0010D0  2A34               	incf	??_pin_directoin_intialize^0,f,c
   767  0010D2  EF6D  F008         	goto	u1034
   768  0010D6                     u1035:
   769  0010D6  90D8               	bcf	status,0,c
   770  0010D8  3635               	rlcf	(??_pin_directoin_intialize+1)^0,f,c
   771  0010DA                     u1034:
   772  0010DA  2E34               	decfsz	??_pin_directoin_intialize^0,f,c
   773  0010DC  EF6B  F008         	goto	u1035
   774  0010E0  5035               	movf	(??_pin_directoin_intialize+1)^0,w,c
   775  0010E2  0AFF               	xorlw	255
   776  0010E4  6E36               	movwf	(??_pin_directoin_intialize+2)^0,c
   777  0010E6  C032  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
   778  0010EA  C033  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
   779  0010EE  50DF               	movf	223,w,c
   780  0010F0  0B07               	andlw	7
   781  0010F2  6E37               	movwf	(??_pin_directoin_intialize+3)^0,c
   782  0010F4  5037               	movf	(??_pin_directoin_intialize+3)^0,w,c
   783  0010F6  0D02               	mullw	2
   784  0010F8  0E15               	movlw	low _TRIS_array
   785  0010FA  24F3               	addwf	243,w,c
   786  0010FC  6ED9               	movwf	fsr2l,c
   787  0010FE  0E00               	movlw	high _TRIS_array
   788  001100  20F4               	addwfc	prodh,w,c
   789  001102  6EDA               	movwf	fsr2h,c
   790  001104  CFDE F038          	movff	postinc2,??_pin_directoin_intialize+4
   791  001108  CFDD F039          	movff	postdec2,??_pin_directoin_intialize+5
   792  00110C  C038  FFD9         	movff	??_pin_directoin_intialize+4,fsr2l
   793  001110  C039  FFDA         	movff	??_pin_directoin_intialize+5,fsr2h
   794  001114  5036               	movf	(??_pin_directoin_intialize+2)^0,w,c
   795  001116  16DF               	andwf	indf2,f,c
   796  001118  EFAF  F008         	goto	l2072
   797  00111C                     l2070:
   798  00111C  C032  FFD9         	movff	pin_directoin_intialize@pin,fsr2l
   799  001120  C033  FFDA         	movff	pin_directoin_intialize@pin+1,fsr2h
   800  001124  BCDF               	btfsc	indf2,6,c
   801  001126  EF97  F008         	goto	u1041
   802  00112A  EF9A  F008         	goto	u1040
   803  00112E                     u1041:
   804  00112E  0E01               	movlw	1
   805  001130  EF9B  F008         	goto	u1050
   806  001134                     u1040:
   807  001134  0E00               	movlw	0
   808  001136                     u1050:
   809  001136  6E34               	movwf	??_pin_directoin_intialize^0,c
   810  001138  6A35               	clrf	(??_pin_directoin_intialize+1)^0,c
   811                           
   812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   813                           ; Switch size 1, requested type "simple"
   814                           ; Number of cases is 1, Range of values is 0 to 0
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte            4     3 (average)
   818                           ;	Chosen strategy is simple_byte
   819  00113A  5035               	movf	(??_pin_directoin_intialize+1)^0,w,c
   820  00113C  0A00               	xorlw	0	; case 0
   821  00113E  B4D8               	btfsc	status,2,c
   822  001140  EFA4  F008         	goto	l2702
   823  001144  EF2B  F008         	goto	l2062
   824  001148                     l2702:
   825                           
   826                           ; Switch size 1, requested type "simple"
   827                           ; Number of cases is 2, Range of values is 0 to 1
   828                           ; switch strategies available:
   829                           ; Name         Instructions Cycles
   830                           ; simple_byte            7     4 (average)
   831                           ;	Chosen strategy is simple_byte
   832  001148  5034               	movf	??_pin_directoin_intialize^0,w,c
   833  00114A  0A00               	xorlw	0	; case 0
   834  00114C  B4D8               	btfsc	status,2,c
   835  00114E  EF5D  F008         	goto	l2066
   836  001152  0A01               	xorlw	1	; case 1
   837  001154  B4D8               	btfsc	status,2,c
   838  001156  EF2F  F008         	goto	l2064
   839  00115A  EF2B  F008         	goto	l2062
   840  00115E                     l2072:
   841                           
   842                           ;MCAL/GPIO/gpio.c: 30:     return ret;
   843  00115E  503A               	movf	pin_directoin_intialize@ret^0,w,c
   844  001160  0012               	return		;funcret
   845  001162                     __end_of_pin_directoin_intialize:
   846                           	callstack 0
   847                           
   848 ;; *************** function _display_string_at_position_8 *****************
   849 ;; Defined at:
   850 ;;		line 356 in file "ECU/LCD/lcd.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  lcd             2   28[COMRAM] PTR const struct .
   853 ;;		 -> lcd_1(10), 
   854 ;;  row             1   30[COMRAM] unsigned char 
   855 ;;  coloumn         1   31[COMRAM] unsigned char 
   856 ;;  data            2   32[COMRAM] PTR unsigned char 
   857 ;;		 -> STR_1(8), 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  ret             1   34[COMRAM] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      unsigned char 
   862 ;; Registers used:
   863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   869 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;Total ram usage:        7 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 4
   876 ;; This function calls:
   877 ;;		_display_char_8
   878 ;;		_lcd_8_bit_set_cursor
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text3
   885  001566                     __ptext3:
   886                           	callstack 0
   887  001566                     _display_string_at_position_8:
   888                           	callstack 26
   889  001566                     
   890                           ;ECU/LCD/lcd.c: 356: Std_ReturnType display_string_at_position_8 (const lcd_8_bit_mode *
      +                          lcd,uint8 row,uint8 coloumn,uint8 *data);ECU/LCD/lcd.c: 357: {;ECU/LCD/lcd.c: 358:     S
      +                          td_ReturnType ret=(Std_ReturnType)0x01;
   891  001566  0E01               	movlw	1
   892  001568  6E54               	movwf	display_string_at_position_8@ret^0,c
   893  00156A                     
   894                           ;ECU/LCD/lcd.c: 359:     if(((void*)0)==lcd)
   895  00156A  504E               	movf	display_string_at_position_8@lcd^0,w,c
   896  00156C  104F               	iorwf	(display_string_at_position_8@lcd+1)^0,w,c
   897  00156E  A4D8               	btfss	status,2,c
   898  001570  EFBC  F00A         	goto	u1161
   899  001574  EFBE  F00A         	goto	u1160
   900  001578                     u1161:
   901  001578  EFC2  F00A         	goto	l2216
   902  00157C                     u1160:
   903  00157C                     
   904                           ;ECU/LCD/lcd.c: 360:     {;ECU/LCD/lcd.c: 361:         ret=(Std_ReturnType)0x00;
   905  00157C  0E00               	movlw	0
   906  00157E  6E54               	movwf	display_string_at_position_8@ret^0,c
   907                           
   908                           ;ECU/LCD/lcd.c: 362:     }
   909  001580  EFEB  F00A         	goto	l2224
   910  001584                     l2216:
   911                           
   912                           ;ECU/LCD/lcd.c: 364:     {;ECU/LCD/lcd.c: 365:         lcd_8_bit_set_cursor(lcd,row,colo
      +                          umn);
   913  001584  C04E  F048         	movff	display_string_at_position_8@lcd,lcd_8_bit_set_cursor@lcd
   914  001588  C04F  F049         	movff	display_string_at_position_8@lcd+1,lcd_8_bit_set_cursor@lcd+1
   915  00158C  C050  F04A         	movff	display_string_at_position_8@row,lcd_8_bit_set_cursor@row
   916  001590  C051  F04B         	movff	display_string_at_position_8@coloumn,lcd_8_bit_set_cursor@column
   917  001594  ECCB  F009         	call	_lcd_8_bit_set_cursor	;wreg free
   918                           
   919                           ;ECU/LCD/lcd.c: 366:         while(*data!='\0')
   920  001598  EFDD  F00A         	goto	l2222
   921  00159C                     l2218:
   922                           
   923                           ;ECU/LCD/lcd.c: 367:         {;ECU/LCD/lcd.c: 368:             display_char_8(lcd,*data+
      +                          +);
   924  00159C  C04E  F03F         	movff	display_string_at_position_8@lcd,display_char_8@lcd
   925  0015A0  C04F  F040         	movff	display_string_at_position_8@lcd+1,display_char_8@lcd+1
   926  0015A4  C052  FFF6         	movff	display_string_at_position_8@data,tblptrl
   927  0015A8  C053  FFF7         	movff	display_string_at_position_8@data+1,tblptrh
   928  0015AC                     	if	0	;tblptru may be non-zero
   929  0015AC                     	endif
   930  0015AC                     	if	0	;tblptru may be non-zero
   931  0015AC                     	endif
   932  0015AC  0008               	tblrd		*
   933  0015AE  CFF5 F041          	movff	tablat,display_char_8@data
   934  0015B2  EC6B  F00A         	call	_display_char_8	;wreg free
   935  0015B6  4A52               	infsnz	display_string_at_position_8@data^0,f,c
   936  0015B8  2A53               	incf	(display_string_at_position_8@data+1)^0,f,c
   937  0015BA                     l2222:
   938                           
   939                           ;ECU/LCD/lcd.c: 366:         while(*data!='\0')
   940  0015BA  C052  FFF6         	movff	display_string_at_position_8@data,tblptrl
   941  0015BE  C053  FFF7         	movff	display_string_at_position_8@data+1,tblptrh
   942  0015C2                     	if	0	;tblptru may be non-zero
   943  0015C2                     	endif
   944  0015C2                     	if	0	;tblptru may be non-zero
   945  0015C2                     	endif
   946  0015C2  0008               	tblrd		*
   947  0015C4  50F5               	movf	tablat,w,c
   948  0015C6  0900               	iorlw	0
   949  0015C8  A4D8               	btfss	status,2,c
   950  0015CA  EFE9  F00A         	goto	u1171
   951  0015CE  EFEB  F00A         	goto	u1170
   952  0015D2                     u1171:
   953  0015D2  EFCE  F00A         	goto	l2218
   954  0015D6                     u1170:
   955  0015D6                     l2224:
   956                           
   957                           ;ECU/LCD/lcd.c: 372:     return ret;
   958  0015D6  5054               	movf	display_string_at_position_8@ret^0,w,c
   959  0015D8  0012               	return		;funcret
   960  0015DA                     __end_of_display_string_at_position_8:
   961                           	callstack 0
   962                           
   963 ;; *************** function _lcd_8_bit_set_cursor *****************
   964 ;; Defined at:
   965 ;;		line 582 in file "ECU/LCD/lcd.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  lcd             2   22[COMRAM] PTR const struct .
   968 ;;		 -> lcd_1(10), 
   969 ;;  row             1   24[COMRAM] unsigned char 
   970 ;;  column          1   25[COMRAM] unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  ret             1    0        unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      unsigned char 
   975 ;; Registers used:
   976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        6 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 3
   989 ;; This function calls:
   990 ;;		_send_command_8
   991 ;; This function is called by:
   992 ;;		_display_string_at_position_8
   993 ;;		_display_char_at_position_8
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text4
   998  001396                     __ptext4:
   999                           	callstack 0
  1000  001396                     _lcd_8_bit_set_cursor:
  1001                           	callstack 26
  1002  001396                     
  1003                           ;ECU/LCD/lcd.c: 586:     if(((void*)0)==lcd)
  1004  001396  5048               	movf	lcd_8_bit_set_cursor@lcd^0,w,c
  1005  001398  1049               	iorwf	(lcd_8_bit_set_cursor@lcd+1)^0,w,c
  1006  00139A  A4D8               	btfss	status,2,c
  1007  00139C  EFD2  F009         	goto	u1131
  1008  0013A0  EFD4  F009         	goto	u1130
  1009  0013A4                     u1131:
  1010  0013A4  EFD6  F009         	goto	l2150
  1011  0013A8                     u1130:
  1012  0013A8                     
  1013                           ;ECU/LCD/lcd.c: 589:     }
  1014  0013A8  EF22  F00A         	goto	l435
  1015  0013AC                     l2150:
  1016                           
  1017                           ;ECU/LCD/lcd.c: 591:     {;ECU/LCD/lcd.c: 592:         column--;
  1018  0013AC  064B               	decf	lcd_8_bit_set_cursor@column^0,f,c
  1019                           
  1020                           ;ECU/LCD/lcd.c: 593:         switch(row)
  1021  0013AE  EF05  F00A         	goto	l2162
  1022  0013B2                     l2152:
  1023  0013B2  C048  F03F         	movff	lcd_8_bit_set_cursor@lcd,send_command_8@lcd
  1024  0013B6  C049  F040         	movff	lcd_8_bit_set_cursor@lcd+1,send_command_8@lcd+1
  1025  0013BA  504B               	movf	lcd_8_bit_set_cursor@column^0,w,c
  1026  0013BC  0F80               	addlw	128
  1027  0013BE  6E41               	movwf	send_command_8@command^0,c
  1028  0013C0  EC23  F00A         	call	_send_command_8	;wreg free
  1029  0013C4  EF22  F00A         	goto	l435
  1030  0013C8                     l2154:
  1031  0013C8  C048  F03F         	movff	lcd_8_bit_set_cursor@lcd,send_command_8@lcd
  1032  0013CC  C049  F040         	movff	lcd_8_bit_set_cursor@lcd+1,send_command_8@lcd+1
  1033  0013D0  504B               	movf	lcd_8_bit_set_cursor@column^0,w,c
  1034  0013D2  0FC0               	addlw	192
  1035  0013D4  6E41               	movwf	send_command_8@command^0,c
  1036  0013D6  EC23  F00A         	call	_send_command_8	;wreg free
  1037  0013DA  EF22  F00A         	goto	l435
  1038  0013DE                     l2156:
  1039  0013DE  C048  F03F         	movff	lcd_8_bit_set_cursor@lcd,send_command_8@lcd
  1040  0013E2  C049  F040         	movff	lcd_8_bit_set_cursor@lcd+1,send_command_8@lcd+1
  1041  0013E6  504B               	movf	lcd_8_bit_set_cursor@column^0,w,c
  1042  0013E8  0F94               	addlw	148
  1043  0013EA  6E41               	movwf	send_command_8@command^0,c
  1044  0013EC  EC23  F00A         	call	_send_command_8	;wreg free
  1045  0013F0  EF22  F00A         	goto	l435
  1046  0013F4                     l2158:
  1047  0013F4  C048  F03F         	movff	lcd_8_bit_set_cursor@lcd,send_command_8@lcd
  1048  0013F8  C049  F040         	movff	lcd_8_bit_set_cursor@lcd+1,send_command_8@lcd+1
  1049  0013FC  504B               	movf	lcd_8_bit_set_cursor@column^0,w,c
  1050  0013FE  0FD4               	addlw	212
  1051  001400  6E41               	movwf	send_command_8@command^0,c
  1052  001402  EC23  F00A         	call	_send_command_8	;wreg free
  1053  001406  EF22  F00A         	goto	l435
  1054  00140A                     l2162:
  1055  00140A  504A               	movf	lcd_8_bit_set_cursor@row^0,w,c
  1056  00140C  6E4C               	movwf	??_lcd_8_bit_set_cursor^0,c
  1057  00140E  6A4D               	clrf	(??_lcd_8_bit_set_cursor+1)^0,c
  1058                           
  1059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1060                           ; Switch size 1, requested type "simple"
  1061                           ; Number of cases is 1, Range of values is 0 to 0
  1062                           ; switch strategies available:
  1063                           ; Name         Instructions Cycles
  1064                           ; simple_byte            4     3 (average)
  1065                           ;	Chosen strategy is simple_byte
  1066  001410  504D               	movf	(??_lcd_8_bit_set_cursor+1)^0,w,c
  1067  001412  0A00               	xorlw	0	; case 0
  1068  001414  B4D8               	btfsc	status,2,c
  1069  001416  EF0F  F00A         	goto	l2704
  1070  00141A  EF22  F00A         	goto	l435
  1071  00141E                     l2704:
  1072                           
  1073                           ; Switch size 1, requested type "simple"
  1074                           ; Number of cases is 4, Range of values is 1 to 4
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte           13     7 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079  00141E  504C               	movf	??_lcd_8_bit_set_cursor^0,w,c
  1080  001420  0A01               	xorlw	1	; case 1
  1081  001422  B4D8               	btfsc	status,2,c
  1082  001424  EFD9  F009         	goto	l2152
  1083  001428  0A03               	xorlw	3	; case 2
  1084  00142A  B4D8               	btfsc	status,2,c
  1085  00142C  EFE4  F009         	goto	l2154
  1086  001430  0A01               	xorlw	1	; case 3
  1087  001432  B4D8               	btfsc	status,2,c
  1088  001434  EFEF  F009         	goto	l2156
  1089  001438  0A07               	xorlw	7	; case 4
  1090  00143A  B4D8               	btfsc	status,2,c
  1091  00143C  EFFA  F009         	goto	l2158
  1092  001440  EF22  F00A         	goto	l435
  1093  001444                     l435:
  1094  001444  0012               	return		;funcret
  1095  001446                     __end_of_lcd_8_bit_set_cursor:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _send_command_8 *****************
  1099 ;; Defined at:
  1100 ;;		line 248 in file "ECU/LCD/lcd.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  lcd             2   13[COMRAM] PTR const struct .
  1103 ;;		 -> lcd_1(10), 
  1104 ;;  command         1   15[COMRAM] unsigned char 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  counter         1   21[COMRAM] unsigned char 
  1107 ;;  ret             1   20[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      unsigned char 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1117 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;Total ram usage:        9 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 2
  1124 ;; This function calls:
  1125 ;;		_lcd_send_enable_8bit
  1126 ;;		_pin_write_value
  1127 ;; This function is called by:
  1128 ;;		_lcd_8_bit_init
  1129 ;;		_lcd_8_bit_set_cursor
  1130 ;;		_display_custom_char_8
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text5
  1135  001446                     __ptext5:
  1136                           	callstack 0
  1137  001446                     _send_command_8:
  1138                           	callstack 27
  1139  001446                     
  1140                           ;ECU/LCD/lcd.c: 251:     uint8 counter=0;
  1141  001446  0E00               	movlw	0
  1142  001448  6E47               	movwf	send_command_8@counter^0,c
  1143  00144A                     
  1144                           ;ECU/LCD/lcd.c: 252:     if(((void*)0)==lcd)
  1145  00144A  503F               	movf	send_command_8@lcd^0,w,c
  1146  00144C  1040               	iorwf	(send_command_8@lcd+1)^0,w,c
  1147  00144E  A4D8               	btfss	status,2,c
  1148  001450  EF2C  F00A         	goto	u971
  1149  001454  EF2E  F00A         	goto	u970
  1150  001458                     u971:
  1151  001458  EF32  F00A         	goto	l2036
  1152  00145C                     u970:
  1153  00145C                     
  1154                           ;ECU/LCD/lcd.c: 253:     {;ECU/LCD/lcd.c: 254:         ret=(Std_ReturnType)0x00;
  1155  00145C  0E00               	movlw	0
  1156  00145E  6E46               	movwf	send_command_8@ret^0,c
  1157                           
  1158                           ;ECU/LCD/lcd.c: 255:     }
  1159  001460  EF69  F00A         	goto	l2052
  1160  001464                     l2036:
  1161  001464  C03F  F032         	movff	send_command_8@lcd,pin_write_value@pin
  1162  001468  C040  F033         	movff	send_command_8@lcd+1,pin_write_value@pin+1
  1163  00146C  0E00               	movlw	0
  1164  00146E  6E34               	movwf	pin_write_value@value^0,c
  1165  001470  ECB1  F008         	call	_pin_write_value	;wreg free
  1166  001474                     
  1167                           ;ECU/LCD/lcd.c: 261:         for(counter=0;counter<8;counter++)
  1168  001474  0E00               	movlw	0
  1169  001476  6E47               	movwf	send_command_8@counter^0,c
  1170  001478                     l2044:
  1171  001478  5047               	movf	send_command_8@counter^0,w,c
  1172  00147A  243F               	addwf	send_command_8@lcd^0,w,c
  1173  00147C  6E42               	movwf	??_send_command_8^0,c
  1174  00147E  0E00               	movlw	0
  1175  001480  2040               	addwfc	(send_command_8@lcd+1)^0,w,c
  1176  001482  6E43               	movwf	(??_send_command_8+1)^0,c
  1177  001484  0E02               	movlw	2
  1178  001486  2442               	addwf	??_send_command_8^0,w,c
  1179  001488  6E32               	movwf	pin_write_value@pin^0,c
  1180  00148A  0E00               	movlw	0
  1181  00148C  2043               	addwfc	(??_send_command_8+1)^0,w,c
  1182  00148E  6E33               	movwf	(pin_write_value@pin+1)^0,c
  1183  001490  C047  F044         	movff	send_command_8@counter,??_send_command_8+2
  1184  001494  C041  F045         	movff	send_command_8@command,??_send_command_8+3
  1185  001498  2A44               	incf	(??_send_command_8+2)^0,f,c
  1186  00149A  EF51  F00A         	goto	u984
  1187  00149E                     u985:
  1188  00149E  90D8               	bcf	status,0,c
  1189  0014A0  3245               	rrcf	(??_send_command_8+3)^0,f,c
  1190  0014A2                     u984:
  1191  0014A2  2E44               	decfsz	(??_send_command_8+2)^0,f,c
  1192  0014A4  EF4F  F00A         	goto	u985
  1193  0014A8  5045               	movf	(??_send_command_8+3)^0,w,c
  1194  0014AA  0B01               	andlw	1
  1195  0014AC  6E34               	movwf	pin_write_value@value^0,c
  1196  0014AE  ECB1  F008         	call	_pin_write_value	;wreg free
  1197  0014B2                     
  1198                           ;ECU/LCD/lcd.c: 264:         }
  1199  0014B2  2A47               	incf	send_command_8@counter^0,f,c
  1200  0014B4  0E07               	movlw	7
  1201  0014B6  6447               	cpfsgt	send_command_8@counter^0,c
  1202  0014B8  EF60  F00A         	goto	u991
  1203  0014BC  EF62  F00A         	goto	u990
  1204  0014C0                     u991:
  1205  0014C0  EF3C  F00A         	goto	l2044
  1206  0014C4                     u990:
  1207  0014C4                     
  1208                           ;ECU/LCD/lcd.c: 265:         ret=lcd_send_enable_8bit(lcd);
  1209  0014C4  C03F  F03C         	movff	send_command_8@lcd,lcd_send_enable_8bit@lcd
  1210  0014C8  C040  F03D         	movff	send_command_8@lcd+1,lcd_send_enable_8bit@lcd+1
  1211  0014CC  ECED  F00A         	call	_lcd_send_enable_8bit	;wreg free
  1212  0014D0  6E46               	movwf	send_command_8@ret^0,c
  1213  0014D2                     l2052:
  1214                           
  1215                           ;ECU/LCD/lcd.c: 268:     return ret;
  1216  0014D2  5046               	movf	send_command_8@ret^0,w,c
  1217  0014D4  0012               	return		;funcret
  1218  0014D6                     __end_of_send_command_8:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _display_char_8 *****************
  1222 ;; Defined at:
  1223 ;;		line 276 in file "ECU/LCD/lcd.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  lcd             2   13[COMRAM] PTR const struct .
  1226 ;;		 -> lcd_1(10), 
  1227 ;;  data            1   15[COMRAM] unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  counter         1   21[COMRAM] unsigned char 
  1230 ;;  ret             1   20[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      unsigned char 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        9 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 2
  1247 ;; This function calls:
  1248 ;;		_lcd_send_enable_8bit
  1249 ;;		_pin_write_value
  1250 ;; This function is called by:
  1251 ;;		_display_string_at_position_8
  1252 ;;		_display_string_8
  1253 ;;		_display_custom_char_8
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text6
  1258  0014D6                     __ptext6:
  1259                           	callstack 0
  1260  0014D6                     _display_char_8:
  1261                           	callstack 27
  1262  0014D6                     
  1263                           ;ECU/LCD/lcd.c: 279:     uint8 counter=0;
  1264  0014D6  0E00               	movlw	0
  1265  0014D8  6E47               	movwf	display_char_8@counter^0,c
  1266  0014DA                     
  1267                           ;ECU/LCD/lcd.c: 280:     if(((void*)0)==lcd)
  1268  0014DA  503F               	movf	display_char_8@lcd^0,w,c
  1269  0014DC  1040               	iorwf	(display_char_8@lcd+1)^0,w,c
  1270  0014DE  A4D8               	btfss	status,2,c
  1271  0014E0  EF74  F00A         	goto	u1101
  1272  0014E4  EF76  F00A         	goto	u1100
  1273  0014E8                     u1101:
  1274  0014E8  EF7A  F00A         	goto	l2124
  1275  0014EC                     u1100:
  1276  0014EC                     
  1277                           ;ECU/LCD/lcd.c: 281:     {;ECU/LCD/lcd.c: 282:         ret=(Std_ReturnType)0x00;
  1278  0014EC  0E00               	movlw	0
  1279  0014EE  6E46               	movwf	display_char_8@ret^0,c
  1280                           
  1281                           ;ECU/LCD/lcd.c: 283:     }
  1282  0014F0  EFB1  F00A         	goto	l2140
  1283  0014F4                     l2124:
  1284  0014F4  C03F  F032         	movff	display_char_8@lcd,pin_write_value@pin
  1285  0014F8  C040  F033         	movff	display_char_8@lcd+1,pin_write_value@pin+1
  1286  0014FC  0E01               	movlw	1
  1287  0014FE  6E34               	movwf	pin_write_value@value^0,c
  1288  001500  ECB1  F008         	call	_pin_write_value	;wreg free
  1289  001504                     
  1290                           ;ECU/LCD/lcd.c: 287:         for(counter=0;counter<8;counter++)
  1291  001504  0E00               	movlw	0
  1292  001506  6E47               	movwf	display_char_8@counter^0,c
  1293  001508                     l2132:
  1294  001508  5047               	movf	display_char_8@counter^0,w,c
  1295  00150A  243F               	addwf	display_char_8@lcd^0,w,c
  1296  00150C  6E42               	movwf	??_display_char_8^0,c
  1297  00150E  0E00               	movlw	0
  1298  001510  2040               	addwfc	(display_char_8@lcd+1)^0,w,c
  1299  001512  6E43               	movwf	(??_display_char_8+1)^0,c
  1300  001514  0E02               	movlw	2
  1301  001516  2442               	addwf	??_display_char_8^0,w,c
  1302  001518  6E32               	movwf	pin_write_value@pin^0,c
  1303  00151A  0E00               	movlw	0
  1304  00151C  2043               	addwfc	(??_display_char_8+1)^0,w,c
  1305  00151E  6E33               	movwf	(pin_write_value@pin+1)^0,c
  1306  001520  C047  F044         	movff	display_char_8@counter,??_display_char_8+2
  1307  001524  C041  F045         	movff	display_char_8@data,??_display_char_8+3
  1308  001528  2A44               	incf	(??_display_char_8+2)^0,f,c
  1309  00152A  EF99  F00A         	goto	u1114
  1310  00152E                     u1115:
  1311  00152E  90D8               	bcf	status,0,c
  1312  001530  3245               	rrcf	(??_display_char_8+3)^0,f,c
  1313  001532                     u1114:
  1314  001532  2E44               	decfsz	(??_display_char_8+2)^0,f,c
  1315  001534  EF97  F00A         	goto	u1115
  1316  001538  5045               	movf	(??_display_char_8+3)^0,w,c
  1317  00153A  0B01               	andlw	1
  1318  00153C  6E34               	movwf	pin_write_value@value^0,c
  1319  00153E  ECB1  F008         	call	_pin_write_value	;wreg free
  1320  001542                     
  1321                           ;ECU/LCD/lcd.c: 290:         }
  1322  001542  2A47               	incf	display_char_8@counter^0,f,c
  1323  001544  0E07               	movlw	7
  1324  001546  6447               	cpfsgt	display_char_8@counter^0,c
  1325  001548  EFA8  F00A         	goto	u1121
  1326  00154C  EFAA  F00A         	goto	u1120
  1327  001550                     u1121:
  1328  001550  EF84  F00A         	goto	l2132
  1329  001554                     u1120:
  1330  001554                     
  1331                           ;ECU/LCD/lcd.c: 291:         ret=lcd_send_enable_8bit(lcd);
  1332  001554  C03F  F03C         	movff	display_char_8@lcd,lcd_send_enable_8bit@lcd
  1333  001558  C040  F03D         	movff	display_char_8@lcd+1,lcd_send_enable_8bit@lcd+1
  1334  00155C  ECED  F00A         	call	_lcd_send_enable_8bit	;wreg free
  1335  001560  6E46               	movwf	display_char_8@ret^0,c
  1336  001562                     l2140:
  1337                           
  1338                           ;ECU/LCD/lcd.c: 294:     return ret;
  1339  001562  5046               	movf	display_char_8@ret^0,w,c
  1340  001564  0012               	return		;funcret
  1341  001566                     __end_of_display_char_8:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _lcd_send_enable_8bit *****************
  1345 ;; Defined at:
  1346 ;;		line 527 in file "ECU/LCD/lcd.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  lcd             2   10[COMRAM] PTR const struct .
  1349 ;;		 -> lcd_1(10), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  ret             1   12[COMRAM] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      unsigned char 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;Total ram usage:        3 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 1
  1368 ;; This function calls:
  1369 ;;		_pin_write_value
  1370 ;; This function is called by:
  1371 ;;		_send_command_8
  1372 ;;		_display_char_8
  1373 ;;		_display_char_at_position_8
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text7
  1378  0015DA                     __ptext7:
  1379                           	callstack 0
  1380  0015DA                     _lcd_send_enable_8bit:
  1381                           	callstack 27
  1382  0015DA                     
  1383                           ;ECU/LCD/lcd.c: 531:     if(((void*)0)==lcd)
  1384  0015DA  503C               	movf	lcd_send_enable_8bit@lcd^0,w,c
  1385  0015DC  103D               	iorwf	(lcd_send_enable_8bit@lcd+1)^0,w,c
  1386  0015DE  A4D8               	btfss	status,2,c
  1387  0015E0  EFF4  F00A         	goto	u961
  1388  0015E4  EFF6  F00A         	goto	u960
  1389  0015E8                     u961:
  1390  0015E8  EFFA  F00A         	goto	l2020
  1391  0015EC                     u960:
  1392  0015EC                     
  1393                           ;ECU/LCD/lcd.c: 532:     {;ECU/LCD/lcd.c: 533:         ret=(Std_ReturnType)0x00;
  1394  0015EC  0E00               	movlw	0
  1395  0015EE  6E3E               	movwf	lcd_send_enable_8bit@ret^0,c
  1396                           
  1397                           ;ECU/LCD/lcd.c: 534:     }
  1398  0015F0  EF13  F00B         	goto	l2026
  1399  0015F4                     l2020:
  1400  0015F4  0E01               	movlw	1
  1401  0015F6  243C               	addwf	lcd_send_enable_8bit@lcd^0,w,c
  1402  0015F8  6E32               	movwf	pin_write_value@pin^0,c
  1403  0015FA  0E00               	movlw	0
  1404  0015FC  203D               	addwfc	(lcd_send_enable_8bit@lcd+1)^0,w,c
  1405  0015FE  6E33               	movwf	(pin_write_value@pin+1)^0,c
  1406  001600  0E01               	movlw	1
  1407  001602  6E34               	movwf	pin_write_value@value^0,c
  1408  001604  ECB1  F008         	call	_pin_write_value	;wreg free
  1409  001608                     
  1410                           ;ECU/LCD/lcd.c: 538:         _delay((unsigned long)((10)*(8000000UL/4000000.0)));
  1411  001608  0E06               	movlw	6
  1412  00160A                     u1657:
  1413  00160A  2EE8               	decfsz	wreg,f,c
  1414  00160C  D7FE               	bra	u1657
  1415  00160E  D000               	nop2	
  1416  001610                     
  1417                           ;ECU/LCD/lcd.c: 539:         ret=pin_write_value(&(lcd->en),0);
  1418  001610  0E01               	movlw	1
  1419  001612  243C               	addwf	lcd_send_enable_8bit@lcd^0,w,c
  1420  001614  6E32               	movwf	pin_write_value@pin^0,c
  1421  001616  0E00               	movlw	0
  1422  001618  203D               	addwfc	(lcd_send_enable_8bit@lcd+1)^0,w,c
  1423  00161A  6E33               	movwf	(pin_write_value@pin+1)^0,c
  1424  00161C  0E00               	movlw	0
  1425  00161E  6E34               	movwf	pin_write_value@value^0,c
  1426  001620  ECB1  F008         	call	_pin_write_value	;wreg free
  1427  001624  6E3E               	movwf	lcd_send_enable_8bit@ret^0,c
  1428  001626                     l2026:
  1429                           
  1430                           ;ECU/LCD/lcd.c: 542:     return ret;
  1431  001626  503E               	movf	lcd_send_enable_8bit@ret^0,w,c
  1432  001628  0012               	return		;funcret
  1433  00162A                     __end_of_lcd_send_enable_8bit:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _pin_write_value *****************
  1437 ;; Defined at:
  1438 ;;		line 61 in file "MCAL/GPIO/gpio.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  pin             2    0[COMRAM] PTR const struct .
  1441 ;;		 -> lcd_1._8_bit(8), lcd_1(10), relay_off@relay_status(1), relay_on@relay_status(1), 
  1442 ;;		 -> led_turn_off@led_x(1), led_turn_on@led_x(1), 
  1443 ;;  value           1    2[COMRAM] unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  ret             1    9[COMRAM] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      unsigned char 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1455 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;Total ram usage:       10 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_send_command_8
  1465 ;;		_display_char_8
  1466 ;;		_lcd_send_enable_8bit
  1467 ;;		_segment_write
  1468 ;;		_motor_right
  1469 ;;		_motor_left
  1470 ;;		_motor_off
  1471 ;;		_keypad_read
  1472 ;;		_led_turn_on
  1473 ;;		_led_turn_off
  1474 ;;		_relay_on
  1475 ;;		_relay_off
  1476 ;;		_send_command
  1477 ;;		_display_char
  1478 ;;		_display_char_at_position
  1479 ;;		_display_char_at_position_8
  1480 ;;		_lcd_send_4bits
  1481 ;;		_lcd_send_enable_4bit
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text8
  1486  001162                     __ptext8:
  1487                           	callstack 0
  1488  001162                     _pin_write_value:
  1489                           	callstack 28
  1490  001162                     
  1491                           ;MCAL/GPIO/gpio.c: 61: Std_ReturnType pin_write_value(const pin_config *pin,uint8 value)
      +                          ;MCAL/GPIO/gpio.c: 62: {;MCAL/GPIO/gpio.c: 63:     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  1492  001162  0E01               	movlw	1
  1493  001164  6E3B               	movwf	pin_write_value@ret^0,c
  1494  001166                     
  1495                           ;MCAL/GPIO/gpio.c: 64:     if(((void*)0) == pin || pin->pin > 8 -1){
  1496  001166  5032               	movf	pin_write_value@pin^0,w,c
  1497  001168  1033               	iorwf	(pin_write_value@pin+1)^0,w,c
  1498  00116A  B4D8               	btfsc	status,2,c
  1499  00116C  EFBA  F008         	goto	u921
  1500  001170  EFBC  F008         	goto	u920
  1501  001174                     u921:
  1502  001174  EFCD  F008         	goto	l1996
  1503  001178                     u920:
  1504  001178  C032  FFD9         	movff	pin_write_value@pin,fsr2l
  1505  00117C  C033  FFDA         	movff	pin_write_value@pin+1,fsr2h
  1506  001180  30DF               	rrcf	223,w,c
  1507  001182  32E8               	rrcf	wreg,f,c
  1508  001184  32E8               	rrcf	wreg,f,c
  1509  001186  0B07               	andlw	7
  1510  001188  6E35               	movwf	??_pin_write_value^0,c
  1511  00118A  0E07               	movlw	7
  1512  00118C  6435               	cpfsgt	??_pin_write_value^0,c
  1513  00118E  EFCB  F008         	goto	u931
  1514  001192  EFCD  F008         	goto	u930
  1515  001196                     u931:
  1516  001196  EF30  F009         	goto	l2004
  1517  00119A                     u930:
  1518  00119A                     l1996:
  1519                           
  1520                           ;MCAL/GPIO/gpio.c: 65:         ret = (Std_ReturnType)0x00;
  1521  00119A  0E00               	movlw	0
  1522  00119C  6E3B               	movwf	pin_write_value@ret^0,c
  1523                           
  1524                           ;MCAL/GPIO/gpio.c: 66:     }
  1525  00119E  EF45  F009         	goto	l2006
  1526  0011A2                     l1998:
  1527  0011A2  C032  FFD9         	movff	pin_write_value@pin,fsr2l
  1528  0011A6  C033  FFDA         	movff	pin_write_value@pin+1,fsr2h
  1529  0011AA  30DF               	rrcf	223,w,c
  1530  0011AC  32E8               	rrcf	wreg,f,c
  1531  0011AE  32E8               	rrcf	wreg,f,c
  1532  0011B0  0B07               	andlw	7
  1533  0011B2  6E35               	movwf	??_pin_write_value^0,c
  1534  0011B4  0E01               	movlw	1
  1535  0011B6  6E36               	movwf	(??_pin_write_value+1)^0,c
  1536  0011B8  2A35               	incf	??_pin_write_value^0,f,c
  1537  0011BA  EFE1  F008         	goto	u944
  1538  0011BE                     u945:
  1539  0011BE  90D8               	bcf	status,0,c
  1540  0011C0  3636               	rlcf	(??_pin_write_value+1)^0,f,c
  1541  0011C2                     u944:
  1542  0011C2  2E35               	decfsz	??_pin_write_value^0,f,c
  1543  0011C4  EFDF  F008         	goto	u945
  1544  0011C8  C032  FFD9         	movff	pin_write_value@pin,fsr2l
  1545  0011CC  C033  FFDA         	movff	pin_write_value@pin+1,fsr2h
  1546  0011D0  50DF               	movf	223,w,c
  1547  0011D2  0B07               	andlw	7
  1548  0011D4  6E37               	movwf	(??_pin_write_value+2)^0,c
  1549  0011D6  5037               	movf	(??_pin_write_value+2)^0,w,c
  1550  0011D8  0D02               	mullw	2
  1551  0011DA  0E01               	movlw	low _LAT_array
  1552  0011DC  24F3               	addwf	243,w,c
  1553  0011DE  6ED9               	movwf	fsr2l,c
  1554  0011E0  0E00               	movlw	high _LAT_array
  1555  0011E2  20F4               	addwfc	prodh,w,c
  1556  0011E4  6EDA               	movwf	fsr2h,c
  1557  0011E6  CFDE F038          	movff	postinc2,??_pin_write_value+3
  1558  0011EA  CFDD F039          	movff	postdec2,??_pin_write_value+4
  1559  0011EE  C038  FFD9         	movff	??_pin_write_value+3,fsr2l
  1560  0011F2  C039  FFDA         	movff	??_pin_write_value+4,fsr2h
  1561  0011F6  5036               	movf	(??_pin_write_value+1)^0,w,c
  1562  0011F8  12DF               	iorwf	indf2,f,c
  1563  0011FA  EF45  F009         	goto	l2006
  1564  0011FE                     l2000:
  1565  0011FE  C032  FFD9         	movff	pin_write_value@pin,fsr2l
  1566  001202  C033  FFDA         	movff	pin_write_value@pin+1,fsr2h
  1567  001206  30DF               	rrcf	223,w,c
  1568  001208  32E8               	rrcf	wreg,f,c
  1569  00120A  32E8               	rrcf	wreg,f,c
  1570  00120C  0B07               	andlw	7
  1571  00120E  6E35               	movwf	??_pin_write_value^0,c
  1572  001210  0E01               	movlw	1
  1573  001212  6E36               	movwf	(??_pin_write_value+1)^0,c
  1574  001214  2A35               	incf	??_pin_write_value^0,f,c
  1575  001216  EF0F  F009         	goto	u954
  1576  00121A                     u955:
  1577  00121A  90D8               	bcf	status,0,c
  1578  00121C  3636               	rlcf	(??_pin_write_value+1)^0,f,c
  1579  00121E                     u954:
  1580  00121E  2E35               	decfsz	??_pin_write_value^0,f,c
  1581  001220  EF0D  F009         	goto	u955
  1582  001224  5036               	movf	(??_pin_write_value+1)^0,w,c
  1583  001226  0AFF               	xorlw	255
  1584  001228  6E37               	movwf	(??_pin_write_value+2)^0,c
  1585  00122A  C032  FFD9         	movff	pin_write_value@pin,fsr2l
  1586  00122E  C033  FFDA         	movff	pin_write_value@pin+1,fsr2h
  1587  001232  50DF               	movf	223,w,c
  1588  001234  0B07               	andlw	7
  1589  001236  6E38               	movwf	(??_pin_write_value+3)^0,c
  1590  001238  5038               	movf	(??_pin_write_value+3)^0,w,c
  1591  00123A  0D02               	mullw	2
  1592  00123C  0E01               	movlw	low _LAT_array
  1593  00123E  24F3               	addwf	243,w,c
  1594  001240  6ED9               	movwf	fsr2l,c
  1595  001242  0E00               	movlw	high _LAT_array
  1596  001244  20F4               	addwfc	prodh,w,c
  1597  001246  6EDA               	movwf	fsr2h,c
  1598  001248  CFDE F039          	movff	postinc2,??_pin_write_value+4
  1599  00124C  CFDD F03A          	movff	postdec2,??_pin_write_value+5
  1600  001250  C039  FFD9         	movff	??_pin_write_value+4,fsr2l
  1601  001254  C03A  FFDA         	movff	??_pin_write_value+5,fsr2h
  1602  001258  5037               	movf	(??_pin_write_value+2)^0,w,c
  1603  00125A  16DF               	andwf	indf2,f,c
  1604  00125C  EF45  F009         	goto	l2006
  1605  001260                     l2004:
  1606  001260  5034               	movf	pin_write_value@value^0,w,c
  1607  001262  6E35               	movwf	??_pin_write_value^0,c
  1608  001264  6A36               	clrf	(??_pin_write_value+1)^0,c
  1609                           
  1610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1611                           ; Switch size 1, requested type "simple"
  1612                           ; Number of cases is 1, Range of values is 0 to 0
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte            4     3 (average)
  1616                           ;	Chosen strategy is simple_byte
  1617  001266  5036               	movf	(??_pin_write_value+1)^0,w,c
  1618  001268  0A00               	xorlw	0	; case 0
  1619  00126A  B4D8               	btfsc	status,2,c
  1620  00126C  EF3A  F009         	goto	l2706
  1621  001270  EFCD  F008         	goto	l1996
  1622  001274                     l2706:
  1623                           
  1624                           ; Switch size 1, requested type "simple"
  1625                           ; Number of cases is 2, Range of values is 0 to 1
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte            7     4 (average)
  1629                           ;	Chosen strategy is simple_byte
  1630  001274  5035               	movf	??_pin_write_value^0,w,c
  1631  001276  0A00               	xorlw	0	; case 0
  1632  001278  B4D8               	btfsc	status,2,c
  1633  00127A  EFFF  F008         	goto	l2000
  1634  00127E  0A01               	xorlw	1	; case 1
  1635  001280  B4D8               	btfsc	status,2,c
  1636  001282  EFD1  F008         	goto	l1998
  1637  001286  EFCD  F008         	goto	l1996
  1638  00128A                     l2006:
  1639                           
  1640                           ;MCAL/GPIO/gpio.c: 76:     return ret;
  1641  00128A  503B               	movf	pin_write_value@ret^0,w,c
  1642  00128C  0012               	return		;funcret
  1643  00128E                     __end_of_pin_write_value:
  1644                           	callstack 0
  1645                           
  1646                           	psect	rparam
  1647  0000                     
  1648                           	psect	idloc
  1649                           
  1650                           ;Config register IDLOC0 @ 0x200000
  1651                           ;	unspecified, using default values
  1652  200000                     	org	2097152
  1653  200000  FF                 	db	255
  1654                           
  1655                           ;Config register IDLOC1 @ 0x200001
  1656                           ;	unspecified, using default values
  1657  200001                     	org	2097153
  1658  200001  FF                 	db	255
  1659                           
  1660                           ;Config register IDLOC2 @ 0x200002
  1661                           ;	unspecified, using default values
  1662  200002                     	org	2097154
  1663  200002  FF                 	db	255
  1664                           
  1665                           ;Config register IDLOC3 @ 0x200003
  1666                           ;	unspecified, using default values
  1667  200003                     	org	2097155
  1668  200003  FF                 	db	255
  1669                           
  1670                           ;Config register IDLOC4 @ 0x200004
  1671                           ;	unspecified, using default values
  1672  200004                     	org	2097156
  1673  200004  FF                 	db	255
  1674                           
  1675                           ;Config register IDLOC5 @ 0x200005
  1676                           ;	unspecified, using default values
  1677  200005                     	org	2097157
  1678  200005  FF                 	db	255
  1679                           
  1680                           ;Config register IDLOC6 @ 0x200006
  1681                           ;	unspecified, using default values
  1682  200006                     	org	2097158
  1683  200006  FF                 	db	255
  1684                           
  1685                           ;Config register IDLOC7 @ 0x200007
  1686                           ;	unspecified, using default values
  1687  200007                     	org	2097159
  1688  200007  FF                 	db	255
  1689                           
  1690                           	psect	config
  1691                           
  1692                           ; Padding undefined space
  1693  300000                     	org	3145728
  1694  300000  FF                 	db	255
  1695                           
  1696                           ;Config register CONFIG1H @ 0x300001
  1697                           ;	Oscillator Selection bits
  1698                           ;	OSC = HS, HS oscillator
  1699                           ;	Fail-Safe Clock Monitor Enable bit
  1700                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1701                           ;	Internal/External Oscillator Switchover bit
  1702                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1703  300001                     	org	3145729
  1704  300001  02                 	db	2
  1705                           
  1706                           ;Config register CONFIG2L @ 0x300002
  1707                           ;	Power-up Timer Enable bit
  1708                           ;	PWRT = OFF, PWRT disabled
  1709                           ;	Brown-out Reset Enable bits
  1710                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1711                           ;	Brown Out Reset Voltage bits
  1712                           ;	BORV = 3, Minimum setting
  1713  300002                     	org	3145730
  1714  300002  1F                 	db	31
  1715                           
  1716                           ;Config register CONFIG2H @ 0x300003
  1717                           ;	Watchdog Timer Enable bit
  1718                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1719                           ;	Watchdog Timer Postscale Select bits
  1720                           ;	WDTPS = 32768, 1:32768
  1721  300003                     	org	3145731
  1722  300003  1E                 	db	30
  1723                           
  1724                           ; Padding undefined space
  1725  300004                     	org	3145732
  1726  300004  FF                 	db	255
  1727                           
  1728                           ;Config register CONFIG3H @ 0x300005
  1729                           ;	CCP2 MUX bit
  1730                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1731                           ;	PORTB A/D Enable bit
  1732                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1733                           ;	Low-Power Timer1 Oscillator Enable bit
  1734                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1735                           ;	MCLR Pin Enable bit
  1736                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1737  300005                     	org	3145733
  1738  300005  81                 	db	129
  1739                           
  1740                           ;Config register CONFIG4L @ 0x300006
  1741                           ;	Stack Full/Underflow Reset Enable bit
  1742                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1743                           ;	Single-Supply ICSP Enable bit
  1744                           ;	LVP = OFF, Single-Supply ICSP disabled
  1745                           ;	Extended Instruction Set Enable bit
  1746                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1747                           ;	Background Debugger Enable bit
  1748                           ;	DEBUG = 0x1, unprogrammed default
  1749  300006                     	org	3145734
  1750  300006  81                 	db	129
  1751                           
  1752                           ; Padding undefined space
  1753  300007                     	org	3145735
  1754  300007  FF                 	db	255
  1755                           
  1756                           ;Config register CONFIG5L @ 0x300008
  1757                           ;	Code Protection bit
  1758                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1759                           ;	Code Protection bit
  1760                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1761                           ;	Code Protection bit
  1762                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1763                           ;	Code Protection bit
  1764                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1765  300008                     	org	3145736
  1766  300008  0F                 	db	15
  1767                           
  1768                           ;Config register CONFIG5H @ 0x300009
  1769                           ;	Boot Block Code Protection bit
  1770                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1771                           ;	Data EEPROM Code Protection bit
  1772                           ;	CPD = OFF, Data EEPROM not code-protected
  1773  300009                     	org	3145737
  1774  300009  C0                 	db	192
  1775                           
  1776                           ;Config register CONFIG6L @ 0x30000A
  1777                           ;	Write Protection bit
  1778                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1779                           ;	Write Protection bit
  1780                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1781                           ;	Write Protection bit
  1782                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1783                           ;	Write Protection bit
  1784                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1785  30000A                     	org	3145738
  1786  30000A  0F                 	db	15
  1787                           
  1788                           ;Config register CONFIG6H @ 0x30000B
  1789                           ;	Configuration Register Write Protection bit
  1790                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1791                           ;	Boot Block Write Protection bit
  1792                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1793                           ;	Data EEPROM Write Protection bit
  1794                           ;	WRTD = OFF, Data EEPROM not write-protected
  1795  30000B                     	org	3145739
  1796  30000B  E0                 	db	224
  1797                           
  1798                           ;Config register CONFIG7L @ 0x30000C
  1799                           ;	Table Read Protection bit
  1800                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1801                           ;	Table Read Protection bit
  1802                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1803                           ;	Table Read Protection bit
  1804                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1805                           ;	Table Read Protection bit
  1806                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1807  30000C                     	org	3145740
  1808  30000C  0F                 	db	15
  1809                           
  1810                           ;Config register CONFIG7H @ 0x30000D
  1811                           ;	Boot Block Table Read Protection bit
  1812                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1813  30000D                     	org	3145741
  1814  30000D  40                 	db	64
  1815                           tosu	equ	0xFFF
  1816                           tosh	equ	0xFFE
  1817                           tosl	equ	0xFFD
  1818                           stkptr	equ	0xFFC
  1819                           pclatu	equ	0xFFB
  1820                           pclath	equ	0xFFA
  1821                           pcl	equ	0xFF9
  1822                           tblptru	equ	0xFF8
  1823                           tblptrh	equ	0xFF7
  1824                           tblptrl	equ	0xFF6
  1825                           tablat	equ	0xFF5
  1826                           prodh	equ	0xFF4
  1827                           prodl	equ	0xFF3
  1828                           indf0	equ	0xFEF
  1829                           postinc0	equ	0xFEE
  1830                           postdec0	equ	0xFED
  1831                           preinc0	equ	0xFEC
  1832                           plusw0	equ	0xFEB
  1833                           fsr0h	equ	0xFEA
  1834                           fsr0l	equ	0xFE9
  1835                           wreg	equ	0xFE8
  1836                           indf1	equ	0xFE7
  1837                           postinc1	equ	0xFE6
  1838                           postdec1	equ	0xFE5
  1839                           preinc1	equ	0xFE4
  1840                           plusw1	equ	0xFE3
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           bsr	equ	0xFE0
  1844                           indf2	equ	0xFDF
  1845                           postinc2	equ	0xFDE
  1846                           postdec2	equ	0xFDD
  1847                           preinc2	equ	0xFDC
  1848                           plusw2	equ	0xFDB
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    16
    Data        49
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     35      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S1172$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1172$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_8_bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(COMRAM[10]), 

    lcd_send_enable_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 0

    display_string_at_position_8@data	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    display_string_at_position_8@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(COMRAM[10]), 

    display_char_8@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(COMRAM[10]), 

    send_command_8@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(COMRAM[10]), 

    lcd_8_bit_init@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(COMRAM[10]), 

    pin_write_value@pin	PTR const struct . size(2) Largest target is 10
		 -> lcd_1._8_bit(COMRAM[8]), lcd_1(COMRAM[10]), relay_off@relay_status(COMRAM[1]), relay_on@relay_status(COMRAM[1]), 
		 -> led_turn_off@led_x(COMRAM[1]), led_turn_on@led_x(COMRAM[1]), 

    pin_directoin_intialize@pin	PTR const struct . size(2) Largest target is 10
		 -> lcd_1._8_bit(COMRAM[8]), lcd_1(COMRAM[10]), relay_init@relay_status(COMRAM[1]), led_init@led_x(COMRAM[1]), 

    LAT_array	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    PORT_array	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    TRIS_array	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_display_string_at_position_8
    _lcd_8_bit_init->_send_command_8
    _display_string_at_position_8->_lcd_8_bit_set_cursor
    _lcd_8_bit_set_cursor->_send_command_8
    _send_command_8->_lcd_send_enable_8bit
    _display_char_8->_lcd_send_enable_8bit
    _lcd_send_enable_8bit->_pin_write_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34206
       _display_string_at_position_8
                     _lcd_8_bit_init
 ---------------------------------------------------------------------------------
 (1) _lcd_8_bit_init                                       6     4      2   12526
                                             22 COMRAM     6     4      2
            _pin_directoin_intialize
                     _send_command_8
 ---------------------------------------------------------------------------------
 (2) _pin_directoin_intialize                              9     7      2    1167
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _display_string_at_position_8                         7     1      6   21680
                                             28 COMRAM     7     1      6
                     _display_char_8
               _lcd_8_bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8_bit_set_cursor                                 7     3      4   11627
                                             22 COMRAM     6     2      4
                     _send_command_8
 ---------------------------------------------------------------------------------
 (2) _send_command_8                                       9     6      3   10938
                                             13 COMRAM     9     6      3
               _lcd_send_enable_8bit
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (2) _display_char_8                                       9     6      3    9570
                                             13 COMRAM     9     6      3
               _lcd_send_enable_8bit
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (3) _lcd_send_enable_8bit                                 3     1      2    4603
                                             10 COMRAM     3     1      2
                    _pin_write_value
 ---------------------------------------------------------------------------------
 (3) _pin_write_value                                     10     7      3    4283
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_string_at_position_8
     _display_char_8
       _lcd_send_enable_8bit
         _pin_write_value
       _pin_write_value
     _lcd_8_bit_set_cursor
       _send_command_8
         _lcd_send_enable_8bit
         _pin_write_value
   _lcd_8_bit_init
     _pin_directoin_intialize
     _send_command_8

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     23      61       1       76.4%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      39        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Aug 18 17:04:20 2023

                          _TRIS_array 0015                __end_of_display_char_8 1566  
        __end_of_lcd_8_bit_set_cursor 1446                                   l180 1160  
                                 l332 1394                                   l413 1628  
                                 l253 168C                                   l254 168C  
                                 l346 1564                                   l339 14D4  
                                 l435 1444                                   l199 128C  
                                 l369 15D8                                   u920 1178  
                                 u921 1174                                   u930 119A  
                                 u931 1196                                   u944 11C2  
                                 u960 15EC                                   u945 11BE  
                                 u961 15E8                                   u954 121E  
                                 u970 145C                                   u955 121A  
                                 u971 1458                                   u990 14C4  
                                 u991 14C0                                   u984 14A2  
                                 u985 149E                                   _ret 0027  
                                 prod 000FF3                                   wreg 000FE8  
                                l2000 11FE                                  l2004 1260  
                                l2020 15F4                                  l2006 128A  
                                l2022 1608                                  l2014 15DA  
                                l2030 1446                                  l2024 1610  
                                l2016 15DA                                  l2120 14DA  
                                l2032 144A                                  l2200 1360  
                                l2026 1626                                  l2018 15EC  
                                l2122 14EC                                  l2050 14C4  
                                l2034 145C                                  l2210 1566  
                                l2202 1370                                  l2132 1508  
                                l2140 1562                                  l2124 14F4  
                                l2044 1478                                  l2052 14D2  
                                l2036 1464                                  l2220 15B6  
                                l2212 156A                                  l2060 1034  
                                l2204 1380                                  l2134 1542  
                                l2126 1504                                  l2118 14D6  
                                l2046 14B2                                  l2038 1474  
                                l2150 13AC                                  l2222 15BA  
                                l2214 157C                                  l2070 111C  
                                l2062 1056                                  l2206 1392  
                                l2136 1544                                  l2048 14B4  
                                l2152 13B2                                  l2144 1396  
                                l2224 15D6                                  l2216 1584  
                                l2064 105E                                  l2072 115E  
                                l2056 101E                                  l2138 1554  
                                l2154 13C8                                  l2162 140A  
                                l2146 1396                                  l2218 159C  
                                l2066 10BA                                  l2058 1022  
                                l2170 1292                                  l2156 13DE  
                                l2148 13A8                                  l2172 12A4  
                                l2158 13F4                                  l2190 130C  
                                l2182 12D0                                  l2174 12AC  
                                l2192 131C                                  l2184 12EC  
                                l2176 12CC                                  l2168 128E  
                                l2194 133A                                  l2186 12EE  
                                l2196 1340                                  l2188 12FE  
                                l2532 1660                                  l2702 1148  
                                l2198 1350                                  l2534 166E  
                                l2704 141E                                  l2706 1274  
                                l1990 1162                                  l1992 1166  
                                l1994 1178                                  l1996 119A  
                                l1998 11A2                                  STR_1 1011  
                                STR_2 1019                                  u1000 1034  
                                u1001 1030                                  u1010 1056  
                                u1011 1052                                  u1100 14EC  
                                u1101 14E8                                  u1120 1554  
                                u1040 1134                                  u1024 107E  
                                u1121 1550                                  u1041 112E  
                                u1025 107A                                  u1114 1532  
                                u1130 13A8                                  u1050 1136  
                                u1034 10DA                                  u1115 152E  
                                u1131 13A4                                  u1035 10D6  
                                u1140 12A4                                  u1141 12A0  
                                u1150 12FE                                  u1151 12FA  
                                u1160 157C                                  u1161 1578  
                                u1170 15D6                                  u1171 15D2  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATC 000F8B                                  _LATD 000F8C  
                                _LATE 000F8D                                  u1627 1304  
                                u1637 1322                                  u1647 133C  
                                u1657 160A                                  _main 1660  
                                fsr2h 000FDA                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                prodl 000FF3                                  start 0000  
                        ___param_bank 000000                       ?_display_char_8 003F  
                               ?_main 0032                 send_command_8@command 0041  
                               _PORTA 000F80                                 _PORTB 000F81  
                               _PORTC 000F82                                 _PORTD 000F83  
                               _PORTE 000F84                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                               _TRISD 000F95                                 _TRISE 000F96  
               send_command_8@counter 0047                     lcd_8_bit_init@lcd 0048  
                   lcd_8_bit_init@ret 004D                                 _lcd_1 0028  
                               tablat 000FF5                                 status 000FD8  
                     __initialization 162A                          __end_of_main 1694  
                              ??_main 0055                         __activetblptr 000002  
                    led_turn_on@F3016 0060          __end_of_lcd_send_enable_8bit 162A  
             lcd_send_enable_8bit@lcd 003C               lcd_send_enable_8bit@ret 003E  
                _lcd_8_bit_set_cursor 1396                     send_command_8@lcd 003F  
                   send_command_8@ret 0046              ?_pin_directoin_intialize 0032  
                              clear_0 1650                                isa$std 000001  
                       led_init@F3011 0061                          __pdataCOMRAM 0001  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                      _send_command_8 1446                            __accesstop 0080  
             __end_of__initialization 1656                 ?_lcd_8_bit_set_cursor 0048  
          lcd_8_bit_set_cursor@column 004B                         ___rparam_used 000001  
                      __pcstackCOMRAM 0032                    display_char_8@data 0041  
               display_char_8@counter 0047                __end_of_send_command_8 14D6  
                   ??_pin_write_value 0035                      ??_display_char_8 0042  
                       _buttons_array 1001                     led_turn_off@F3021 005F  
                     led_toggle@F3026 005E                  _lcd_send_enable_8bit 15DA  
                      _lcd_8_bit_init 128E  __end_of_display_string_at_position_8 15DA  
        _display_string_at_position_8 1566                       ?_send_command_8 003F  
 display_string_at_position_8@coloumn 0051                ??_lcd_8_bit_set_cursor 004C  
                             __Hparam 0000                               __Lparam 0000  
                        __psmallconst 1000                               __pcinit 162A  
               ?_lcd_send_enable_8bit 003C                               __ramtop 1000  
                          _customChar 001F                         relay_on@F3010 005C  
                             __ptext0 1660                               __ptext1 128E  
                             __ptext2 101E                               __ptext3 1566  
                             __ptext4 1396                               __ptext5 1446  
                             __ptext6 14D6                               __ptext7 15DA  
                             __ptext8 1162                __end_of_lcd_8_bit_init 1396  
       ?_display_string_at_position_8 004E                  end_of_initialization 1656  
                       __Lmediumconst 0000                             _LAT_array 0001  
                short_to_string@F3162 0055            pin_directoin_intialize@pin 0032  
          pin_directoin_intialize@ret 003A                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                       ?_lcd_8_bit_init 0048  
                pin_write_value@value 0034                ??_lcd_send_enable_8bit 003E  
                       __pidataCOMRAM 1694               lcd_8_bit_set_cursor@lcd 0048  
             lcd_8_bit_set_cursor@row 004A                       _pin_write_value 1162  
                 start_initialization 162A        ??_display_string_at_position_8 0054  
               lcd_8_bit_init@counter 004C                      ??_send_command_8 0042  
                         __pbssCOMRAM 0055                    pin_write_value@pin 0032  
                  pin_write_value@ret 003B                     display_char_8@lcd 003F  
                   display_char_8@ret 0046               __end_of_pin_write_value 128E  
                         __smallconst 1000               _pin_directoin_intialize 101E  
                    ??_lcd_8_bit_init 004A                       relay_init@F3005 005D  
                           copy_data0 163E                              __Hrparam 0000  
                            __Lrparam 0000                      ?_pin_write_value 0032  
           ??_pin_directoin_intialize 0034                        relay_off@F3015 005B  
               __end_of_buttons_array 1011                              isa$xinst 000000  
    display_string_at_position_8@data 0052       __end_of_pin_directoin_intialize 1162  
     display_string_at_position_8@lcd 004E       display_string_at_position_8@ret 0054  
     display_string_at_position_8@row 0050                        _display_char_8 14D6  
                          _PORT_array 000B  
